parameters:
  - name: celestiaUser
    type: string
  - name: celestiaVersion
    type: string
  - name: sshKeyFile
    type: string
  - name: remoteHost
    type: string
  - name: remoteUser
    type: string
  - name: operations
    type: object
    default:
      download: true
      build: false
      configure: false
  - name: repository
    type: string
    default: 'https://github.com/celestiaorg/celestia-node.git'
  - name: targetDirectory
    type: string
    default: 'celestia-node'

steps:
  # Download Celestia source code
  - ${{ if parameters.operations.download }}:
    - template: ../../common/user-execution.yml
      parameters:
        celestiaUser: ${{ parameters.celestiaUser }}
        sshKeyFile: ${{ parameters.sshKeyFile }}
        remoteHost: ${{ parameters.remoteHost }}
        remoteUser: ${{ parameters.remoteUser }}
        displayName: 'üì• Download Celestia ${{ parameters.celestiaVersion }} Source Code'
        scriptContent: |
          echo "üì¶ Downloading Celestia ${{ parameters.celestiaVersion }} source code..."

          # Clean up existing directory
          cd $HOME
          rm -rf ${{ parameters.targetDirectory }}

          # Clone repository and checkout specific version
          git clone ${{ parameters.repository }} ${{ parameters.targetDirectory }}
          cd ${{ parameters.targetDirectory }}/
          git checkout tags/${{ parameters.celestiaVersion }}

          echo "‚úÖ Celestia source code downloaded successfully!"

  # Build Celestia (if requested)
  - ${{ if parameters.operations.build }}:
    - template: ../../common/user-execution.yml
      parameters:
        celestiaUser: ${{ parameters.celestiaUser }}
        sshKeyFile: ${{ parameters.sshKeyFile }}
        remoteHost: ${{ parameters.remoteHost }}
        remoteUser: ${{ parameters.remoteUser }}
        displayName: '‚öôÔ∏è Build Celestia Node'
        scriptContent: |
          echo "üî® Building Celestia node..."
          cd $HOME/celestia-node
          make build
          echo "‚úÖ Celestia node built successfully!"

  # Configure Celestia (if requested)
  - ${{ if parameters.operations.configure }}:
    - template: ../../common/user-execution.yml
      parameters:
        celestiaUser: ${{ parameters.celestiaUser }}
        sshKeyFile: ${{ parameters.sshKeyFile }}
        remoteHost: ${{ parameters.remoteHost }}
        remoteUser: ${{ parameters.remoteUser }}
        displayName: '‚öôÔ∏è Configure Celestia Node'
        scriptContent: |
          echo "‚öôÔ∏è Configuring Celestia node..."
          cd $HOME/celestia-node
          # Add configuration commands here
          echo "‚úÖ Celestia node configured successfully!"
