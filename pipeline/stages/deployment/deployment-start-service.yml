parameters:
  - name: celestiaUser
    type: string
  - name: celestiaNetwork
    type: string
  - name: rpcPort
    type: string
  - name: sshKeyFile
    type: string
  - name: remoteHost
    type: string
  - name: remoteUser
    type: string

steps:
  - task: Bash@3
    displayName: 'üåü Start Celestia Light Node Service'
    inputs:
      targetType: inline
      script: |
        echo "Starting Celestia light node service with enhanced process management..."

        ssh -i ~/.ssh/${{ parameters.sshKeyFile }} ${{ parameters.remoteUser }}@${{ parameters.remoteHost }} << 'EOF'

        # Upload and setup the process manager script
        if [ ! -f "/usr/local/bin/celestia-process-manager.sh" ]; then
          echo "üìÅ Setting up process manager..."
          # The process manager script should be uploaded separately or created here
          sudo mkdir -p /usr/local/bin
          sudo chmod +x /usr/local/bin/celestia-process-manager.sh 2>/dev/null || true
        fi

        # Stop any existing service and clean up old PIDs
        echo "üßπ Cleaning up existing processes..."
        sudo systemctl stop celestia-light 2>/dev/null || true

        # Clean up old PID files
        sudo rm -f /var/run/celestia-*.pid /tmp/celestia-*.pid 2>/dev/null || true
        rm -f $HOME/celestia-*.pid 2>/dev/null || true

        # Clear any previous logs
        sudo journalctl --vacuum-time=1s

        # Start the service
        echo "üöÄ Starting celestia-light service..."
        sudo systemctl start celestia-light

        # Wait for startup
        sleep 5

        # Monitor the service and store its PID
        echo "üìç Storing service PID for enhanced cleanup..."
        if command -v celestia-process-manager.sh >/dev/null 2>&1; then
          celestia-process-manager.sh monitor celestia-light 30
        else
          # Fallback: manually store the PID
          if systemctl is-active celestia-light > /dev/null; then
            MAIN_PID=$(systemctl show celestia-light --property MainPID --value 2>/dev/null)
            if [ -n "$MAIN_PID" ] && [ "$MAIN_PID" != "0" ]; then
              echo "$MAIN_PID" | sudo tee /var/run/celestia-light.pid > /dev/null
              echo "$MAIN_PID" > /tmp/celestia-light.pid 2>/dev/null || true
              echo "$MAIN_PID" > $HOME/celestia-light.pid 2>/dev/null || true
              echo "‚úÖ Stored PID $MAIN_PID for cleanup"
            fi
          fi
        fi

        # Check service status
        echo "üìä Service status:"
        sudo systemctl status celestia-light --no-pager --lines=10

        # Enhanced service verification
        if sudo systemctl is-active celestia-light > /dev/null; then
          echo "‚úÖ Service is running"

          # Get and display PID information
          MAIN_PID=$(systemctl show celestia-light --property MainPID --value 2>/dev/null)
          if [ -n "$MAIN_PID" ] && [ "$MAIN_PID" != "0" ]; then
            echo "üìç Service PID: $MAIN_PID"
            BINARY_PATH=$(readlink -f "/proc/$MAIN_PID/exe" 2>/dev/null || echo "unknown")
            echo "üìç Binary path: $BINARY_PATH"

            # Check listening ports for verification
            PORTS=$(lsof -Pan -p "$MAIN_PID" -i 2>/dev/null | grep LISTEN | awk '{print $9}' | sort -u | tr '\n' ' ' || echo "none")
            echo "üìç Listening ports: $PORTS"
          fi
        else
          echo "‚ùå Service is not running - checking for issues..."

          # Show failure details
          echo "üîç Service failure details:"
          sudo systemctl status celestia-light --no-pager --lines=20

          # Show recent logs
          echo "üìú Recent error logs:"
          sudo journalctl -u celestia-light -n 30 --no-pager --since "5 minutes ago"

          # Try to identify the issue
          echo "üîß Checking common issues..."
          sudo -u ${{ parameters.celestiaUser }} bash -c 'source ~/.bash_profile && which celestia' || echo "Celestia binary not found in PATH"

          # Check if the user exists and has proper permissions
          id ${{ parameters.celestiaUser }} || echo "User ${{ parameters.celestiaUser }} does not exist"

          # Check node store permissions
          ls -la /home/${{ parameters.celestiaUser }}/.celestia-light-${{ parameters.celestiaNetwork }}/ || echo "Node store directory not accessible"
        fi

        # Show detailed logs regardless of status
        echo "üìú Latest service logs:"
        sudo journalctl -u celestia-light -n 50 --no-pager

        # Verify PID storage
        echo "üîç Verifying PID storage:"
        if [ -f "/var/run/celestia-light.pid" ]; then
          PID_CONTENT=$(cat /var/run/celestia-light.pid 2>/dev/null)
          echo "‚úÖ PID stored in /var/run/celestia-light.pid: $PID_CONTENT"
        elif [ -f "/tmp/celestia-light.pid" ]; then
          PID_CONTENT=$(cat /tmp/celestia-light.pid 2>/dev/null)
          echo "‚úÖ PID stored in /tmp/celestia-light.pid: $PID_CONTENT"
        else
          echo "‚ö†Ô∏è Warning: No PID file found - cleanup may be less reliable"
        fi

        echo "‚úÖ Service start process completed - check logs above for any errors"
        EOF
